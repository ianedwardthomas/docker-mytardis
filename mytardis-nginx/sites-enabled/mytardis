upstream mytardis {
    #ip_hash;
    server mytardisapp:80 fail_timeout=0;
    #server unix:/var/run/gunicorn/mytardis/socket ;
}


#upstream kibana {
#    ip_hash;
#    server kibana:5601 fail_timeout=0;
#}

server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        # If using real named domain use server_name instead
        # server_name example.com www.example.com;
	    # return 301 https://$server_name$request_uri;
        return 301 https://$host$request_uri;
}

server {

    listen 443 ssl;

    ssl_certificate_key /opt/certs/mytardis.key;
    ssl_certificate /opt/certs/mytardis.crt;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNull:!MD5;

    client_max_body_size 4G;
    keepalive_timeout 5;

    gzip off;  # security reasons
    gzip_proxied any;
    # chiminey generates uncompressed archives, so compress them in transit
    gzip_types application/x-javascript text/css;
    gzip_min_length 1024;
    gzip_vary on;

    access_log /logs/nginx_access.log;
    error_log /logs/nginx_error.log;

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        proxy_pass http://mytardis;

        # this is to solve centos 6 error:
        # upstream prematurely closed
        client_max_body_size 4G;
        client_body_buffer_size 8192k;
        proxy_connect_timeout 2000;
        proxy_send_timeout 2000;
        proxy_read_timeout 2000;
    }

    location /static/ {
        expires 7d;
        alias /opt/mytardis/webapp/static/;
    }
}

#server {
#
#    listen 5601;
#
#    access_log /logs/nginx_access.log;
#    error_log /logs/nginx_error.log;
#
#    #Password protected end points
#    location / {
#         proxy_pass http://kibana;
#         proxy_read_timeout 90;
#         limit_except GET {
#           proxy_pass http://kibana;
#           auth_basic "Restricted";
#           auth_basic_user_file /etc/nginx/kibana/kibana.htpasswd;
#         }
#     }
# }
