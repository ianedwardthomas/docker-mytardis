sudo: required

language: python

services:
    - docker

env:
    global:
        - DOCKER_VERSION=1.10.1-0~trusty
        - DOCKER_COMPOSE_VERSION=1.7.0

before_install:
    # list docker-engine versions
    #- apt-cache madison docker-engine

    # upgrade docker-engine to specific version
    #- sudo apt-get -o Dpkg::Options::="--force-confnew" install -y docker-engine=${DOCKER_VERSION}

    # reinstall docker-compose at specific version
    - sudo rm /usr/local/bin/docker-compose
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
    - chmod +x docker-compose
    - sudo mv docker-compose /usr/local/bin

script:
      - set -e
      - docker version
      - docker-compose version
      - LOCAL_TAG=`cat tag.txt`
      - if [ "$LOCAL_TAG" == ""  ]; then LOCAL_TAG=postgres; fi
      - echo $LOCAL_TAG
      - ./init $LOCAL_TAG
      - cp env .env
      - docker-compose build
      - docker-compose run makecerts < .travis.input.txt
      - docker-compose up -d
      - sleep 60
      - docker-compose logs
      - docker-compose ps
      - docker-compose exec app bash -c "chown -R mytardis.nginx /opt/mytardis/webapp"
      - docker-compose exec --user 1000 app bash -c "export DOCKER_BUILD=true && python mytardis.py test --settings=tardis.test_settings -e mydata"
      - docker-compose -f selenium.yml up -d --force-recreate
      - sleep 30
      - docker-compose -f selenium.yml ps
      - docker volume ls
      - docker network ls
      - docker ps
      - docker-compose -f smoketest.yml build
      - docker-compose -f smoketest.yml run test
      - docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      - VERSION=`cat version.txt`
      - if [ "$VERSION" == ""  ]; then VERSION=latest; fi
      - MYTARDIS_IMG_REPO=$DOCKER_USERNAME/mytardis-app-"$LOCAL_TAG":"$VERSION"-travis
      - NGINX_IMG_REPO=$DOCKER_USERNAME/mytardis-nginx-"$LOCAL_TAG":"$VERSION"-travis
      - docker commit -a "$DOCKER_AUTHOR" -m "auto build" dockermytardis_app_1 $MYTARDIS_IMG_REPO
      - docker commit -a "$DOCKER_AUTHOR" -m "auto build" dockermytardis_nginx_1 $NGINX_IMG_REPO
      - docker push $MYTARDIS_IMG_REPO
      - docker push $NGINX_IMG_REPO
